# Full build setup off main, with ~docsOnly commit filter to run just mvn_site then docs.
name: Default CI

on:
  push:
    branches: [ "main", "temp/*" ]
  pull_request:
    branches: [ "main", "temp/*" ]

env:
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
  MAVEN_CLI_TESTSHADES_OPTS: "-f testShades/pom.xml --batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
  # -Dmaven.repo.local=.m2/repository not needed on github, seems ~/.m2 is supported / expected
  MAVEN_OPTS: "-Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.class=standard -Dmaven.wagon.http.retryHandler.count=3 -Dhttps.protocols=TLSv1.2 -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  GPG_KEY: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
  OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
  OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}
  MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

jobs:

  # all versions that can be built with tests - typically oss only.  Fail fast so we can see all compilation or test errors at once
  testBuild_Spark2:
    uses: ./.github/workflows/run_build.yml
    with:
      testString: test
      theMatrix: |
        {
          profile: Spark2
          scala: "scala_2.11"
        }

  testBuilds_2_12_10:
    runs-on: ubuntu-latest
    uses: ./.github/workflows/run_build.yml
    with:
      testString: test
      theMatrix: |
        {
          profile: [Spark3, Spark313]
          scala: ["scala_2.12.10"]
        }  

  testBuilds_2_12_15_and_13_5:
    runs-on: ubuntu-latest
    uses: ./.github/workflows/run_build.yml
    with:
      testString: test
      theMatrix: |
        {
          profile: [ Spark32, Spark321, Spark332, Spark341, Spark350 ]
          scala: [ "scala_2.12.15", "scala_2.13.5" ]
        }

  testBuilds_2_12_18_and_2_13_12:
    runs-on: ubuntu-latest
    uses: ./.github/workflows/run_build.yml
    with:
      testString: test
      theMatrix: |
        {
          profile: [Spark4]
          scala: ["scala_2.12.18", "scala_2.13.12"]
        }

  noTestBuilds_2_12_10:
    runs-on: ubuntu-latest
    uses: ./.github/workflows/run_build.yml
    with:
      testString: -DskipTests
      theMatrix: |
        {
          profile: "9.1.dbr"
          scala: ["scala_2.12.10"]
        }

  noTestBuilds_2_12_15_and_13_5:
    runs-on: ubuntu-latest
    uses: ./.github/workflows/run_build.yml
    with:
      testString: -DskipTests
      theMatrix: |
        {
          profile: [ "10.4.dbr", "11.3.dbr", "12.2.dbr", "13.1.dbr", "13.3.dbr", "14.0.dbr", "14.3.dbr" ]
          scala: [ "scala_2.12.15", "scala_2.13.5" ]
        }

  # prove tests run with single thread, ensures compilation issues aren't hidden by being run on multiple threads instead of re-used in the same thread (e.g. state resetting etc.)
  # build scoverage tests on 3.3.0 first with aggregate, the copy the data out, not doing a clean build fails on site.  Also needs single threading to work, have noticed multiple failures and inconsistent coverage.
  mvn_site:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: s-weigand/setup-conda@v1
        with:
          python-version: '3.10'
      - uses: ./.github/workflows/spark_maven
        with:
          title: Building site against Spark340
          script: |
            conda install libgomp=11.2.0 # force the right libs
            conda install graphviz=2.50.0 # conda is from fatty

            echo '#!/bin/bash' > dott
            echo 'dot "$@" 2> >(grep -v "pango" | grep -v "Warning" >&2 )' >> dott

            chmod u+x dott

            export QUALITY_SPARK_HOSTS=1
            mvn $MAVEN_CLI_OPTS clean scoverage:test -P Spark332,scala_2.12.15

            mkdir tmpSCoverage
            rm -f ./target/scoverage-data/scoverage.coverage
            cp ./target/scoverage-data/* tmpSCoverage 2>/dev/null || :

            mvn $MAVEN_CLI_OPTS clean scoverage:test -P Spark341,scala_2.12.15
            
            cp tmpSCoverage/* ./target/scoverage-data 2>/dev/null || :
            
            mvn $MAVEN_CLI_OPTS site -P Spark341,scala_2.12.15

            echo $(mvn help:evaluate -Dexpression=project.version -q -DforceStdout -P Spark341,scala_2.12.15) > target/version.txt

            grep -A 3 'Statement coverage:' target/site/scoverage/overview.html | tail -1 | sed 's/[[:space:]]\+//g' > target/coverage.txt
            grep -A 3 'Branch coverage:' target/site/scoverage/overview.html | tail -1 | sed 's/[[:space:]]\+//g' >> target/coverage.txt
      - id: version
        run: echo version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout -P Spark341,scala_2.12.15) >> "$GITHUB_OUTPUT"
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
      - name: target
        uses: actions/upload-artifact@v4
        with:
          name: target-mvn_site
          path: |
            target/site
            target/coverage.txt
            target/version.txt
            compilation/target/site
            runtime/target/site

    outputs:
      version: ${{ steps.version.outputs.version }}

  publish_Spark2:
    runs-on: ubuntu-latest
    needs: [testBuild_Spark2]
    uses: ./.github/workflows/publish_build.yml
    with:
      theMatrix: |
        {
          profile: Spark2
          scala: "scala_2.11"
        }

  publish_2_12_10:
    runs-on: ubuntu-latest
    needs: [ testBuilds_2_12_10, noTestBuilds_2_12_10 ]
    uses: ./.github/workflows/publish_build.yml
    with:
      testString: test
      theMatrix: |
        {
          profile: [Spark3, Spark313, "9.1.dbr"]
          scala: ["scala_2.12.10"]
        }  

  publish_2_12_15_and_13_5:
    runs-on: ubuntu-latest
    needs: [testBuilds_2_12_15_and_13_5, noTestBuilds_2_12_15_and_13_5]
    uses: ./.github/workflows/publish_build.yml
    with:
      testString: test
      theMatrix: |
        {
          profile: [ Spark32, Spark321, Spark332, Spark341, Spark350, "10.4.dbr", "11.3.dbr", "12.2.dbr", "13.1.dbr", "13.3.dbr", "14.0.dbr", "14.3.dbr" ]
          scala: [ "scala_2.12.15", "scala_2.13.5" ]
        }

  publish_2_12_18_and_2_13_12:
    runs-on: ubuntu-latest
    needs: [testBuilds_2_12_18_and_2_13_12]
    uses: ./.github/workflows/publish_build.yml
    with:
      testString: test
      theMatrix: |
        {
          profile: [Spark4]
          scala: ["scala_2.12.18", "scala_2.13.12"]
        }

  site:
    needs: [mvn_site]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v4
        with:
          name: target-mvn_site
          path: target
      - uses: ./.github/workflows/mkdocs
        with:
          prepScript: |
            cp -rf target/target/site docs/
            cp target/target/coverage.txt docs/
            cp -rf target/runtime/target/site docs/site/shim_runtime_3.4.1.oss_3.4_2.12
            cp -rf target/compilation/target/site docs/site/shim_compilation_3.4.1.oss_3.4_2.12            
            cp target/target/version.txt .
            cp target/target/coverage.txt .
